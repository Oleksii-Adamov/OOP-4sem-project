-- MySQL Script generated by MySQL Workbench
-- Wed Jun 15 01:28:04 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema database
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema database
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `database` DEFAULT CHARACTER SET utf8 ;
USE `database` ;

-- -----------------------------------------------------
-- Table `database`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`User` (
  `UserID` INT NOT NULL AUTO_INCREMENT,
  `Login` VARCHAR(20) NOT NULL,
  `UserName` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`UserID`),
  UNIQUE INDEX `UserID_UNIQUE` (`UserID` ASC) VISIBLE,
  UNIQUE INDEX `Login_UNIQUE` (`Login` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`Authorization`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`Authorization` (
  `UserID` INT NOT NULL,
  `Password` VARCHAR(66) NOT NULL,
  PRIMARY KEY (`UserID`),
  INDEX `fk_Password_User_idx` (`UserID` ASC) VISIBLE,
  UNIQUE INDEX `UserID_UNIQUE` (`UserID` ASC) VISIBLE,
  CONSTRAINT `fk_Password_User`
    FOREIGN KEY (`UserID`)
    REFERENCES `database`.`User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`Classroom`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`Classroom` (
  `ClassroomID` INT NOT NULL AUTO_INCREMENT,
  `TeacherUserID` INT NOT NULL,
  PRIMARY KEY (`ClassroomID`, `TeacherUserID`),
  UNIQUE INDEX `RoomID_UNIQUE` (`ClassroomID` ASC) VISIBLE,
  INDEX `fk_Class_User1_idx` (`TeacherUserID` ASC) VISIBLE,
  CONSTRAINT `fk_Class_User1`
    FOREIGN KEY (`TeacherUserID`)
    REFERENCES `database`.`User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`Assignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`Assignment` (
  `AssignmentID` INT NOT NULL AUTO_INCREMENT,
  `TeacherUserID` INT NOT NULL,
  `AssignmentName` VARCHAR(40) NOT NULL,
  `AssignmentCreationDate` DATETIME NOT NULL DEFAULT current_timestamp,
  `AssignmentData` VARCHAR(66) NOT NULL,
  `AssignmentMaxScore` INT NULL,
  PRIMARY KEY (`AssignmentID`, `TeacherUserID`),
  UNIQUE INDEX `TaskID_UNIQUE` (`AssignmentID` ASC) VISIBLE,
  INDEX `fk_Assignment_User1_idx` (`TeacherUserID` ASC) VISIBLE,
  CONSTRAINT `fk_Assignment_User1`
    FOREIGN KEY (`TeacherUserID`)
    REFERENCES `database`.`User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`Student_Classroom`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`Student_Classroom` (
  `ClassroomID` INT NOT NULL,
  `StudentUserID` INT NOT NULL,
  PRIMARY KEY (`ClassroomID`, `StudentUserID`),
  INDEX `fk_User_has_Class_Class1_idx` (`ClassroomID` ASC) VISIBLE,
  INDEX `fk_User_has_Class_User1_idx` (`StudentUserID` ASC) VISIBLE,
  CONSTRAINT `fk_User_has_Class_User1`
    FOREIGN KEY (`StudentUserID`)
    REFERENCES `database`.`User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Class_Class1`
    FOREIGN KEY (`ClassroomID`)
    REFERENCES `database`.`Classroom` (`ClassroomID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`AssignmentSession`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`AssignmentSession` (
  `AssignmentSessionID` INT NOT NULL AUTO_INCREMENT,
  `AssignmentID` INT NOT NULL,
  `AssignmentSessionStartDate` DATETIME NOT NULL DEFAULT current_timestamp,
  `AssignmentSessionFinishDate` DATETIME NULL,
  PRIMARY KEY (`AssignmentSessionID`, `AssignmentID`),
  UNIQUE INDEX `AssignmentSesionID_UNIQUE` (`AssignmentSessionID` ASC) VISIBLE,
  INDEX `fk_AssignmentSesion_Assignment1_idx` (`AssignmentID` ASC) VISIBLE,
  CONSTRAINT `fk_AssignmentSesion_Assignment1`
    FOREIGN KEY (`AssignmentID`)
    REFERENCES `database`.`Assignment` (`AssignmentID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`Student_AssignmentSession`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`Student_AssignmentSession` (
  `StudentUserID` INT NOT NULL,
  `AssignmentSessionID` INT NOT NULL,
  `StudentAssignmentSessionStatus` INT NOT NULL,
  `StudentAssignmentSessionAnswer` VARCHAR(66) NULL,
  `StudentAssignmentSessionScore` INT NULL,
  `StudentAssignmentSessionFinishDate` DATETIME NULL,
  PRIMARY KEY (`StudentUserID`, `AssignmentSessionID`),
  INDEX `fk_Assignment_has_User_User1_idx` (`StudentUserID` ASC) VISIBLE,
  INDEX `fk_Student_AssignmentSesion_AssignmentSesion1_idx` (`AssignmentSessionID` ASC) VISIBLE,
  CONSTRAINT `fk_Assignment_has_User_User1`
    FOREIGN KEY (`StudentUserID`)
    REFERENCES `database`.`User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Student_AssignmentSesion_AssignmentSesion1`
    FOREIGN KEY (`AssignmentSessionID`)
    REFERENCES `database`.`AssignmentSession` (`AssignmentSessionID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
